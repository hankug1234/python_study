# -*- coding: utf-8 -*-
"""most_ten_famous_ml_algorithm

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NuJnoZny10romopNSkIXoavH5NpfVOWT
"""

from sklearn.model_selection import train_test_split, cross_val_score, StratifiedKFold
from matplotlib import pyplot
from sklearn.preprocessing import StandardScaler
import pandas as pd
import matplotlib.pyplot as plt

!git clone https://github.com/taehojo/data.git

df = pd.read_csv("/content/data/pima-indians-diabetes3.csv")
X = df.iloc[:,0:8]
y = df.iloc[:,8]

ss = StandardScaler()
scaled_X = pd.DataFrame(ss.fit_transform(X),columns=X.columns)

fig,ax = pyplot.subplots(1,2,figsize=(12,4))
X.plot(kind='kde',title='raw data', ax=ax[0])
scaled_X.plot(kind='kde',title='scaled_data',ax=ax[1])

X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.25,random_state=42)

from sklearn.naive_bayes import GaussianNB
classifier = GaussianNB()
classifier.fit(X_train, y_train)
y_pred =  classifier.predict(X_test)
skf= StratifiedKFold(n_splits=10,shuffle=True)
accuracies = cross_val_score(classifier, X=X_train, y=y_train, cv=skf)

print(accuracies)

from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.naive_bayes import GaussianNB
from sklearn.neighbors import KNeighborsClassifier
from sklearn.ensemble import AdaBoostClassifier
from sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis
from sklearn.svm import SVC
from sklearn.ensemble import VotingClassifier
from sklearn.ensemble import BaggingClassifier
clf3 = SVC(kernel='linear')

classifiers = [DecisionTreeClassifier(), RandomForestClassifier(), GaussianNB(), KNeighborsClassifier(), SVC(kernel='linear'), SVC(kernel='rbf'),
               AdaBoostClassifier(), QuadraticDiscriminantAnalysis(), VotingClassifier(estimators=[("1",AdaBoostClassifier()),("2",RandomForestClassifier()),("3",SVC(kernel="linear"))])
               ,BaggingClassifier(base_estimator=clf3, n_estimators=10, random_state=0)]