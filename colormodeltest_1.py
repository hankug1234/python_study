# -*- coding: utf-8 -*-
"""colorModelTest-1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UpQgxZ66fj5tkIOxK0SzdSPJ-MuTvWch
"""

import cv2
import numpy as np
from matplotlib.pyplot import imshow

sensitivity = 100
lower_white = np.array([0,0,255-sensitivity])
upper_white = np.array([255,sensitivity,255])

lower_blue=np.array([98,50,50]) 
upper_white=np.array([139,255,255]) 

lower_black=np.array([255,255,sensitivity])
upper_black=np.array([0,255-sensitivity,0])



frame = cv2.imread("/whiteTruck.jpg")
# ret will return a true value if the frame exists otherwise False
into_hsv =cv2.cvtColor(frame,cv2.COLOR_BGR2HSV)
# changing the color format from BGr to HSV
# This will be used to create the mask

b_mask=cv2.inRange(into_hsv,lower_white,upper_white)
# creating the mask using inRange() function
# this will produce an image where the color of the objects
# falling in the range will turn white and rest will be black
blue=cv2.bitwise_and(frame,frame,mask=b_mask)
# this will give the color to mask.
 # to display the original frame
imshow(blue) # to display the blue object output


# this function will be triggered when the ESC key is pressed
# and the while loop will terminate and so will the program

imshow(frame)

lower_black=np.array([0,0,0])
upper_black=np.array([180,255,30])
b_mask=cv2.inRange(into_hsv,lower_black,upper_black)
# creating the mask using inRange() function
# this will produce an image where the color of the objects
# falling in the range will turn white and rest will be black
blue=cv2.bitwise_and(frame,frame,mask=b_mask)
# this will give the color to mask.
 # to display the original frame
imshow(blue) # to display the blue object output

frame = cv2.imread("/whiteTruck.jpg")
into_hsv =cv2.cvtColor(frame,cv2.COLOR_BGR2HSV)
mask=cv2.inRange(into_hsv,lower_white,upper_white)
bitwise=cv2.bitwise_and(frame,frame,mask=mask)
imshow(bitwise)

lower_black=np.array([0,0,0])
upper_black=np.array([180,255,50])
frame = cv2.imread("/whiteTruck.jpg")
into_hsv =cv2.cvtColor(frame,cv2.COLOR_BGR2HSV)
mask=cv2.inRange(into_hsv,lower_black,upper_black)
bitwise=cv2.bitwise_and(frame,frame,mask=mask)
imshow(bitwise)

imshow(mask)

for m in mask:
  print(m)

frame = cv2.imread("/sliverCar.jpg")
into_hsv = cv2.cvtColor(frame,cv2.COLOR_BGR2HSV)
mask=cv2.inRange(into_hsv,lower_white,upper_white)
bitwise=cv2.bitwise_and(frame,frame,mask=mask)
imshow(bitwise)

len(mask)

cv2.countNonZero(mask)

import cv2
import numpy as np
from matplotlib.pyplot import imshow

def colorClassification(image,lowers,uppers,labels):
  hsv = cv2.cvtColor(frame,cv2.COLOR_BGR2HSV)
  count = np.array([cv2.countNonZero(cv2.inRange(hsv,l,u)) for l,u in zip(lowers,uppers)])
  return labels[np.argmax(count)]

lower_white = np.array([0,0,155])
upper_white = np.array([255,100,255])

lower_blue=np.array([98,50,50]) 
upper_blue=np.array([139,255,255]) 

lower_black=np.array([0,0,0])
upper_black=np.array([180,255,50])
lowers = [lower_black,lower_white]
uppers = [upper_black,upper_white]
labels = ["black","white"] 

imagesName = ["/blackCar.jpg","/whiteTruck.jpg","/sliverCar.jpg"]
for name in imagesName:
  frame = cv2.imread(name)
  print(colorClassification(frame,lowers,uppers,labels))

