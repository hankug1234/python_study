# -*- coding: utf-8 -*-
"""gradient_decent

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15VxS332T55dnGM4o3WQt_AY9oPvAWnwK
"""

import numpy as np
import matplotlib.pyplot as plt

x = np.array([2,4,6,8])
y = np.array([81,93,91,97])

plt.scatter(x,y)
plt.show()

a = 0
b = 0
lr = 0.03
epochs = 2001

n = len(x)
for i in range(epochs):
  y_pred = a*x+b
  error = y - y_pred
  a_diff = (2/n)*sum(-x*error)
  b_diff = (2/n)*sum(-error)

  a = a -lr*a_diff
  b = b -lr*b_diff

  if i%100 == 0:
    print("epochs=%.f, gradient=%.04f, intercept=%.04f"%(i,a,b))
    plt.scatter(x,y)
    plt.plot(x,y_pred,"r")
    plt.show()

x1 = np.array([2,4,6,8])
x2 = np.array([0,4,2,3])
y = np.array([81,93,91,97])

fig = plt.figure()
ax = fig.add_subplot(111,projection='3d')
ax.scatter3D(x1,x2,y)
plt.show()

a1 = 0
a2 = 0
b = 0
lr = 0.001
epochs = 2001

for i in range(epochs):
  y_pred = a1*x1 + a2*x2+b
  error = y-y_pred
  a1_diff = (2/n)*sum(-x1*error)
  a2_diff = (2/n)*sum(-x2*error)
  b_diff = (2/n)*sum(-error)
  a1 = a1-lr*a1_diff
  a2 = a2-lr*a2_diff
  b = b-lr*b_diff
  if i%100 == 0:
    print("a1:%.4f a2:%.4f b:%.4f"%(a1,a2,b))

