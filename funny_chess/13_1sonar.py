# -*- coding: utf-8 -*-
"""13-1Sonar.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1szaZLaxkANzArwvXc351XRqTE8LcWXHk
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
!git clone https://github.com/taehojo/data.git

df = pd.read_csv("/content/data/sonar3.csv",header=None);

df[60].value_counts()

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

x = df.iloc[:,0:60]
y = df.iloc[:,60]

model = Sequential()
model.add(Dense(24,input_dim=60, activation='relu'))
model.add(Dense(10,activation='relu'))
model.add(Dense(1,activation='sigmoid'))

model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])
history = model.fit(x,y, epochs=200,batch_size=10)

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.3, shuffle=True)

score = model.evaluate(x_test,y_test)
print(score)

model2 = Sequential()
model2.add(Dense(24,input_dim=60, activation='relu'))
model2.add(Dense(10,activation='relu'))
model2.add(Dense(1,activation='sigmoid'))
model2.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])

history = model2.fit(x_train,y_train,epochs=200,batch_size=10)

predict = model2.evaluate(x_test,y_test)
print(predict)

