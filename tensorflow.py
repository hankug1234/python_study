# -*- coding: utf-8 -*-
"""tensorflow

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e7Ho-AFggCksYtDOpT7cD3h3h6cfnA-5
"""

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
import numpy as np
import matplotlib.pyplot as plt

x = np.array([2,4,6,8])
y = np.array([81,93,91,97])

#kerner_initializer = 'glorot_uniform' initial value selection method  glorot_uniform == -1~1 random values 
model = Sequential()
model.add(Dense(1,input_dim=1, activation="linear"))#linear = a(x) = x function
model.compile(optimizer="sgd", loss="mse")#optimizer = method of loss function parameter estimate , loss = loss function
model.fit(x,y,epochs=2000)

import matplotlib.pyplot as plt
plt.scatter(x,y)
plt.plot(x,model.predict(x),color='r')
plt.show()

x = np.array([[2,0],[4,4],[6,2],[8,3]])
y = np.array([81,93,91,97])

model2 = Sequential()
model2.add(Dense(1,input_dim=2, activation='linear'))
model2.compile(optimizer='sgd',loss='mse')
model2.fit(x,y,epochs=2000)

x = np.array([2,4,6,8,10,12,14])
y = np.array([0,0,0,1,1,1,1])
model3 = Sequential()
model3.add(Dense(1,input_dim=1,activation="sigmoid"))
model3.compile(optimizer='sgd',loss="binary_crossentropy")
model3.fit(x,y,epochs=1000)

plt.scatter(x,y)
plt.plot(x,model3.predict(x),"r")
plt.show()

